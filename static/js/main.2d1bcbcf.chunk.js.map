{"version":3,"sources":["components/card-item/card-item.component.jsx","components/card-collection/card-collection.component.jsx","components/custom-button/custom-button.component.jsx","components/deck/deck.component.jsx","components/modal-window/modal-window.component.jsx","components/leaderboard/leaderboard.component.jsx","components/game/game.data.js","components/game/game.utils.js","components/game/game.component.jsx","redux/cards/cards.actions.js","redux/user/user.actions.js","components/welcome-window/welcome.component.jsx","App.js","redux/cards/cards.utils.js","redux/cards/cards.reducer.js","redux/user/user.reducer.js","redux/root-reducer.js","redux/store.js","index.js","redux/cards/cards.types.js","redux/user/user.types.js"],"names":["Card","props","className","backSide","idx","suit","number","connect","state","arrOfCards","cards","cardsState","onClick","map","card","index","split","CustomButton","disabled","children","otherProps","userName","user","currentUser","currentTurns","toLeaderBoard","reset","win","ModalWindow","globalDifficulty","currentDifficulty","useState","difficulty","setDifficulty","localStorage","getItem","data","setData","useEffect","tempData","JSON","parse","gameData","name","push","sort","a","b","makeArrFromData","value","clear","newCollection","shuffle","array","newArr","stringify","i","length","j","Math","floor","random","createRandomCards","collection","slice","Game","resetGame","setArrOfCards","setCardsState","fill","setMatch","resetNumOfTurns","setState","numOfGuessedCards","test","openAllCards","winGame","turn","newRecord","oldRecords","tempObj","setItem","handleEvent","e","openCard","closeCard","increaseNumOfTurns","match","target","prevIndex","curIndex","parseInt","innerText","curCard","prevCard","GuessedCards","clickable","setTimeout","openLeaderboard","showLeader","bind","this","prevProps","React","Component","dispatch","arr","type","cardsActionTypes","SET_ARR_OF_CARDS","payload","OPEN_CARD","CLOSE_CARD","userActionTypes","INCREASE_NUM_OF_TURNS","RESET_NUM_OF_TURNS","SET_MATCH","SET_CARDS_STATE","OPEN_ALL_CARDS","setCurrentUser","SET_CURRENT_USER","setCurrentDifficulty","SET_CURRENT_DIFFICULTY","showModal","setShowModal","handleChange","evt","id","onSubmit","preventDefault","document","querySelector","classList","toggle","placeholder","onChange","htmlFor","App","openCardHelper","cardItems","copyItems","openAllCardsHelper","closeCardHelper","require","INITIAL_STATE","cardsReducer","action","userReducer","combineReducers","middlewares","logger","store","createStore","rootReducer","applyMiddleware","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d1bcbcf.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./card-item.styles.scss\";\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      {/* Если сторона задняя то просто рубашка */}\r\n      {props.backSide ? (\r\n        <div className=\"card--back\">{props.idx}</div>\r\n      ) : (\r\n        <div className={`card--face ${props.suit}`}>\r\n          {/* В зависимости от suit будем менять стиль карты*/}\r\n          <p className=\"card--face--number\">{props.number}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Card from \"../card-item/card-item.component\";\r\n\r\nimport \"./card-collection.styles.scss\";\r\n\r\n// const generateKey = (pre) => {\r\n//   return `${ pre }_${ new Date().getTime() }`;\r\n// }\r\n\r\nfunction CardCollection({ arrOfCards, cardsState, onClick }) {\r\n  return (\r\n    <div className=\"cardDesk\" onClick={onClick}>\r\n      {arrOfCards.map((card, index) => {\r\n        return (\r\n          <Card\r\n            key={index}\r\n            idx={index}\r\n            number={card.split(\"-\")[0]}\r\n            suit={card.split(\"-\")[1]}\r\n            backSide={cardsState[index] === 0 ? true : false}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  arrOfCards: state.cards.arrOfCards,\r\n  cardsState: state.cards.cardsState,\r\n});\r\n\r\nexport default connect(mapStateToProps)(CardCollection);\r\n","import React from \"react\";\r\n\r\nimport \"./custom-button.styles.scss\";\r\n\r\nconst CustomButton = ({ disabled, children, ...otherProps }) => (\r\n  <button\r\n    disabled={disabled}\r\n    className={`${disabled ? \"disabled\" : null} custom-button`}\r\n    {...otherProps}\r\n  >\r\n    {children}\r\n  </button>\r\n);\r\n\r\nexport default CustomButton;\r\n","import { connect } from \"react-redux\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport \"./deck.styles.scss\";\r\n\r\nfunction Deck(props) {\r\n  return (\r\n    <div className=\"deck\">\r\n      <div className=\"deck--elements player\">Player: {props.userName}</div>\r\n      <div className=\"deck--elements turn\">Turn: {props.currentTurns}</div>\r\n      <CustomButton onClick={props.toLeaderBoard}>Leaderboard</CustomButton>\r\n      <CustomButton onClick={props.reset}>Retry</CustomButton>\r\n      <CustomButton onClick={props.win}>Cheat</CustomButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.user.currentUser,\r\n  currentTurns: state.user.currentTurns,\r\n});\r\n\r\nexport default connect(mapStateToProps)(Deck);\r\n","import \"./modal-window.styles.scss\";\r\n\r\nfunction ModalWindow(props) {\r\n  return <div className=\"modal-window\">{props.children}</div>;\r\n}\r\n\r\nexport default ModalWindow;\r\n","import { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CustomButton from \"../custom-button/custom-button.component\";\r\nimport ModalWindow from \"../modal-window/modal-window.component\";\r\nimport \"./leaderboard.styles.scss\";\r\n\r\nfunction LeaderBoard({ toLeaderBoard, globalDifficulty, ...otherProps }) {\r\n  // Создаём\r\n  const [difficulty, setDifficulty] = useState(globalDifficulty);\r\n  const [data, setData] = useState(localStorage.getItem(difficulty));\r\n\r\n  // При обновлении сложности - обновляем данные для отображения\r\n  useEffect(() => setData(localStorage.getItem(difficulty)), [difficulty]);\r\n\r\n  function clearLeaderboard() {\r\n    localStorage.clear();\r\n    setData(null);\r\n  }\r\n\r\n  function makeArrFromData(data) {\r\n    let tempData = JSON.parse(data);\r\n    let gameData = [];\r\n    for (let name in tempData) {\r\n      gameData.push([name, tempData[name]]);\r\n    }\r\n    return gameData.sort(function (a, b) {\r\n      return a[1] - b[1];\r\n    });\r\n  }\r\n\r\n  return (\r\n    <ModalWindow>\r\n      <div className=\"leaderboard\">\r\n        <div className=\"leaderboard--controls\">\r\n          <CustomButton\r\n            onClick={() => setDifficulty(\"easy\")}\r\n            disabled={difficulty === \"easy\"}\r\n          >\r\n            Easy\r\n          </CustomButton>\r\n          <CustomButton\r\n            onClick={() => setDifficulty(\"medium\")}\r\n            disabled={difficulty === \"medium\"}\r\n          >\r\n            Meduim\r\n          </CustomButton>\r\n          <CustomButton\r\n            onClick={() => setDifficulty(\"hard\")}\r\n            disabled={difficulty === \"hard\"}\r\n          >\r\n            Hard\r\n          </CustomButton>\r\n        </div>\r\n        <table className=\"leaderboard--table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Player Name</th>\r\n              <th>Number of Turns</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {data !== null\r\n              ? makeArrFromData(data).map((value, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{value[0]}</td>\r\n                      <td>{value[1]}</td>\r\n                    </tr>\r\n                  );\r\n                })\r\n              : null}\r\n          </tbody>\r\n        </table>\r\n        <div className=\"leaderboard--controls\">\r\n          <CustomButton onClick={clearLeaderboard}>\r\n            Clear Leaderboard\r\n          </CustomButton>\r\n          <CustomButton onClick={toLeaderBoard}>Close</CustomButton>\r\n        </div>\r\n      </div>\r\n    </ModalWindow>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  globalDifficulty: state.user.currentDifficulty,\r\n});\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard);\r\n","export let collection = [\r\n  [2, \"diamonds\", 0],\r\n  [2, \"clubs\", 0],\r\n  [2, \"hearts\", 0],\r\n  [2, \"spades\", 0],\r\n  [3, \"diamonds\", 0],\r\n  [3, \"clubs\", 0],\r\n  [3, \"hearts\", 0],\r\n  [3, \"spades\", 0],\r\n  [4, \"diamonds\", 0],\r\n  [4, \"clubs\", 0],\r\n  [4, \"hearts\", 0],\r\n  [4, \"spades\", 0],\r\n  [5, \"diamonds\", 0],\r\n  [5, \"clubs\", 0],\r\n  [5, \"hearts\", 0],\r\n  [5, \"spades\", 0],\r\n  [6, \"diamonds\", 0],\r\n  [6, \"clubs\", 0],\r\n  [6, \"hearts\", 0],\r\n  [6, \"spades\", 0],\r\n  [7, \"diamonds\", 0],\r\n  [7, \"clubs\", 0],\r\n  [7, \"hearts\", 0],\r\n  [7, \"spades\", 0],\r\n  [8, \"diamonds\", 0],\r\n  [8, \"clubs\", 0],\r\n  [8, \"hearts\", 0],\r\n  [8, \"spades\", 0],\r\n  [9, \"diamonds\", 0],\r\n  [9, \"clubs\", 0],\r\n  [9, \"hearts\", 0],\r\n  [9, \"spades\", 0],\r\n  [10, \"diamonds\", 0],\r\n  [10, \"clubs\", 0],\r\n  [10, \"hearts\", 0],\r\n  [10, \"spades\", 0],\r\n];\r\n\r\nexport let newCollection = [\r\n  \"2-diamonds\",\r\n  \"2-clubs\",\r\n  \"2-hearts\",\r\n  \"2-spades\",\r\n  \"3-diamonds\",\r\n  \"3-clubs\",\r\n  \"3-hearts\",\r\n  \"3-spades\",\r\n  \"4-diamonds\",\r\n  \"4-clubs\",\r\n  \"4-hearts\",\r\n  \"4-spades\",\r\n  \"5-diamonds\",\r\n  \"5-clubs\",\r\n  \"5-hearts\",\r\n  \"5-spades\",\r\n  \"6-diamonds\",\r\n  \"6-clubs\",\r\n  \"6-hearts\",\r\n  \"6-spades\",\r\n  \"7-diamonds\",\r\n  \"7-clubs\",\r\n  \"7-hearts\",\r\n  \"7-spades\",\r\n  \"8-diamonds\",\r\n  \"8-clubs\",\r\n  \"8-hearts\",\r\n  \"8-spades\",\r\n  \"9-diamonds\",\r\n  \"9-clubs\",\r\n  \"9-hearts\",\r\n  \"9-spades\",\r\n];\r\n","export function shuffle(array) {\r\n  let newArr = JSON.parse(JSON.stringify(array));\r\n  for (let i = newArr.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\r\n  }\r\n  return newArr;\r\n}\r\n\r\nexport function createRandomCards(collection, difficulty) {\r\n  let newArr = [];\r\n  switch (difficulty) {\r\n    // В зависимости от сложности игры мы берём разное кол-во карт из коллекции\r\n    case \"easy\":\r\n      newArr = collection.slice(0, 20);\r\n      return shuffle(newArr);\r\n    case \"medium\":\r\n      newArr = collection.slice(0, 24);\r\n      return shuffle(newArr);\r\n    case \"hard\":\r\n      newArr = collection.slice(0, 30);\r\n      return shuffle(newArr);\r\n    default:\r\n      break;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport CardCollection from \"../card-collection/card-collection.component.jsx\";\r\nimport Deck from \"../deck/deck.component.jsx\";\r\nimport LeaderBoard from \"../leaderboard/leaderboard.component.jsx\";\r\nimport {\r\n  closeCard,\r\n  openAllCards,\r\n  openCard,\r\n  setArrOfCards,\r\n  setCardsState,\r\n  setMatch,\r\n} from \"../../redux/cards/cards.actions.js\";\r\nimport {\r\n  increaseNumOfTurns,\r\n  resetNumOfTurns,\r\n} from \"../../redux/user/user.actions.js\";\r\nimport { newCollection } from \"./game.data.js\";\r\nimport { createRandomCards } from \"./game.utils\";\r\n\r\nimport \"./game.styles.scss\";\r\n\r\nclass Game extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      numOfGuessedCards: 0,\r\n      win: false,\r\n      clickable: true,\r\n      showLeader: false,\r\n    };\r\n    this.handleEvent = this.handleEvent.bind(this);\r\n  }\r\n\r\n  // Когда компонент монтируется, то на основе выбранной ранее сложности замешивается колода\r\n  async componentDidMount() {\r\n    await this.props.setArrOfCards(\r\n      createRandomCards(newCollection, this.props.difficulty)\r\n    );\r\n    await this.props.setCardsState([...this.props.arrOfCards].fill(0));\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if (prevProps.difficulty !== this.props.difficulty) {\r\n      await this.props.setArrOfCards(\r\n        createRandomCards(newCollection, this.props.difficulty)\r\n      );\r\n      await this.props.setCardsState([...this.props.arrOfCards].fill(0));\r\n    }\r\n  }\r\n\r\n  resetGame = () => {\r\n    this.props.setArrOfCards(\r\n      createRandomCards(newCollection, this.props.difficulty)\r\n    );\r\n    this.props.setCardsState([...this.props.arrOfCards].fill(0));\r\n    this.props.setMatch(null);\r\n    this.props.resetNumOfTurns();\r\n    this.setState({\r\n      win: false,\r\n      numOfGuessedCards: 0,\r\n    });\r\n  };\r\n\r\n  // For testing\r\n  test = () => {\r\n    this.props.openAllCards();\r\n    this.winGame();\r\n  };\r\n\r\n  winGame = () => {\r\n    let userName = this.props.userName;\r\n    let turn = this.props.currentTurns;\r\n    this.setState({\r\n      win: true,\r\n    });\r\n    let newRecord = { [userName]: turn };\r\n    let oldRecords = JSON.parse(localStorage.getItem(this.props.difficulty));\r\n    // Если в таблице сидит лучший рекорд.\r\n    if (\r\n      oldRecords !== null &&\r\n      userName in oldRecords &&\r\n      oldRecords[userName] < turn\r\n    )\r\n      return;\r\n    let tempObj = { ...oldRecords, ...newRecord };\r\n    localStorage.setItem(this.props.difficulty, JSON.stringify(tempObj));\r\n  };\r\n\r\n  handleEvent = (e) => {\r\n    const {\r\n      arrOfCards,\r\n      openCard,\r\n      closeCard,\r\n      increaseNumOfTurns,\r\n      match,\r\n      setMatch,\r\n    } = this.props;\r\n    let target = e.target;\r\n    if (target.className === \"card--back\") {\r\n      let prevIndex = match;\r\n      // Будем узнавать карту по индексу, который лежит в кач-ве innnerText\r\n      let curIndex = parseInt(target.innerText);\r\n      let curCard = arrOfCards[curIndex].split(\"-\");\r\n      // В любом случае открываем карту\r\n      openCard(curIndex);\r\n      // Если у нас уже есть открытая карта\r\n      if (typeof prevIndex === \"number\") {\r\n        let prevCard = arrOfCards[prevIndex].split(\"-\");\r\n        let GuessedCards = this.state.numOfGuessedCards;\r\n        setMatch(null);\r\n        increaseNumOfTurns();\r\n        // Если ранеее открытая карта === текущей открытой карте\r\n        if (curCard[0] === prevCard[0]) {\r\n          GuessedCards += 2;\r\n          this.setState(\r\n            {\r\n              numOfGuessedCards: GuessedCards,\r\n            },\r\n            // Если мы отгадали вообще все карты\r\n            () => {\r\n              if (GuessedCards === arrOfCards.length) this.winGame();\r\n            }\r\n          );\r\n          // ранеее открытая карта != текущей открытой карте\r\n        } else {\r\n          // Тогда откроем её, запретим на секунду кликать по картам\r\n          this.setState(\r\n            {\r\n              clickable: false,\r\n            },\r\n            // А через 1с закроем обе\r\n            () =>\r\n              setTimeout(() => {\r\n                closeCard(prevIndex);\r\n                closeCard(curIndex);\r\n                this.setState({ clickable: true });\r\n              }, 1000)\r\n          );\r\n        }\r\n      } else {\r\n        // Если у нас нету ранее открытой карты\r\n        setMatch(curIndex);\r\n      }\r\n    } else return;\r\n  };\r\n\r\n  openLeaderboard = () => {\r\n    this.setState({\r\n      showLeader: !this.state.showLeader,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        {this.state.showLeader ? (\r\n          <LeaderBoard toLeaderBoard={this.openLeaderboard} />\r\n        ) : null}\r\n        {this.state.win ? <h2>You are winner!</h2> : null}\r\n        <div className=\"game--main\">\r\n          <CardCollection\r\n            onClick={this.state.clickable ? this.handleEvent : null}\r\n          />\r\n          <Deck\r\n            toLeaderBoard={this.openLeaderboard}\r\n            win={this.test}\r\n            reset={this.resetGame}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.user.currentUser,\r\n  difficulty: state.user.currentDifficulty,\r\n  currentTurns: state.user.currentTurns,\r\n  arrOfCards: state.cards.arrOfCards,\r\n  cardsState: state.cards.cardsState,\r\n  match: state.cards.match,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setArrOfCards: (arr) => dispatch(setArrOfCards(arr)),\r\n  openCard: (index) => dispatch(openCard(index)),\r\n  closeCard: (index) => dispatch(closeCard(index)),\r\n  increaseNumOfTurns: () => dispatch(increaseNumOfTurns()),\r\n  resetNumOfTurns: () => dispatch(resetNumOfTurns()),\r\n  setMatch: (index) => dispatch(setMatch(index)),\r\n  setCardsState: (arr) => dispatch(setCardsState(arr)),\r\n  openAllCards: () => dispatch(openAllCards()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\r\n","import { cardsActionTypes } from \"./cards.types\";\r\n\r\nexport const openCard = (index) => ({\r\n  type: cardsActionTypes.OPEN_CARD,\r\n  payload: index,\r\n});\r\n\r\nexport const openAllCards = () => ({\r\n  type: cardsActionTypes.OPEN_ALL_CARDS,\r\n});\r\n\r\nexport const closeCard = (index) => ({\r\n  type: cardsActionTypes.CLOSE_CARD,\r\n  payload: index,\r\n});\r\n\r\nexport const setArrOfCards = (arr) => ({\r\n  type: cardsActionTypes.SET_ARR_OF_CARDS,\r\n  payload: arr,\r\n});\r\n\r\nexport const setCardsState = (arr) => ({\r\n  type: cardsActionTypes.SET_CARDS_STATE,\r\n  payload: arr,\r\n});\r\n\r\nexport const setMatch = (index) => ({\r\n  type: cardsActionTypes.SET_MATCH,\r\n  payload: index,\r\n});\r\n","import { userActionTypes } from \"./user.types\";\r\n\r\nexport const setCurrentUser = (userName) => ({\r\n  type: userActionTypes.SET_CURRENT_USER,\r\n  payload: userName,\r\n});\r\n\r\nexport const setCurrentDifficulty = (difficulty) => ({\r\n  type: userActionTypes.SET_CURRENT_DIFFICULTY,\r\n  payload: difficulty,\r\n});\r\n\r\nexport const increaseNumOfTurns = () => ({\r\n  type: userActionTypes.INCREASE_NUM_OF_TURNS,\r\n  payload: 1,\r\n});\r\n\r\nexport const resetNumOfTurns = () => ({\r\n  type: userActionTypes.RESET_NUM_OF_TURNS,\r\n  payload: 0,\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setCurrentDifficulty,\r\n  setCurrentUser,\r\n} from \"../../redux/user/user.actions\";\r\nimport ModalWindow from \"../modal-window/modal-window.component\";\r\n\r\nimport \"./welcome.styles.scss\";\r\n\r\nfunction Welcome({\r\n  setCurrentDifficulty,\r\n  setCurrentUser,\r\n  userName,\r\n  difficulty,\r\n}) {\r\n  const [showModal, setShowModal] = useState(true);\r\n\r\n  let handleChange = (evt) => {\r\n    const value = evt.target.value;\r\n    const name = evt.target.name;\r\n    switch (name) {\r\n      case \"userName\":\r\n        return setCurrentUser(value);\r\n      case \"difficulty\":\r\n        return setCurrentDifficulty(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  let submitForm = (evt) => {\r\n    evt.preventDefault();\r\n    if (userName === \"\") {\r\n      document.querySelector(\"#name\").classList.toggle(\"error\");\r\n      setTimeout(\r\n        () => document.querySelector(\"#name\").classList.toggle(\"error\"),\r\n        500\r\n      );\r\n      return;\r\n    }\r\n    setShowModal(false);\r\n  };\r\n\r\n  return showModal ? (\r\n    <ModalWindow>\r\n      <div className=\"game-settings\">\r\n        <form className=\"game-settings--form\" id=\"form\" onSubmit={submitForm}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            id=\"name\"\r\n            placeholder=\"Your name...\"\r\n            onChange={handleChange}\r\n            className=\"game-settings--form--input\"\r\n            value={userName}\r\n          />\r\n          <div>\r\n            <label htmlFor=\"difficulty\">Choose a difficulty:</label>\r\n            <select\r\n              id=\"difficulty\"\r\n              name=\"difficulty\"\r\n              value={difficulty}\r\n              onChange={handleChange}\r\n              className=\"game-settings--form--select\"\r\n            >\r\n              <option value=\"easy\">Easy</option>\r\n              <option value=\"medium\">Medium</option>\r\n              <option value=\"hard\">Hard</option>\r\n            </select>\r\n          </div>\r\n\r\n          <input type=\"submit\" value=\"Done\" />\r\n        </form>\r\n      </div>\r\n    </ModalWindow>\r\n  ) : null;\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userName: state.user.currentUser,\r\n  difficulty: state.user.currentDifficulty,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  setCurrentUser: (user) => dispatch(setCurrentUser(user)),\r\n  setCurrentDifficulty: (user) => dispatch(setCurrentDifficulty(user)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Welcome);\r\n","import React from \"react\";\n\nimport \"./App.css\";\nimport \"./components/game/game.component\";\nimport Game from \"./components/game/game.component\";\nimport Welcome from \"./components/welcome-window/welcome.component\";\n\nfunction App(props) {\n  return (\n    <div className=\"App\">\n      <Welcome />\n      <Game />\n    </div>\n  );\n}\n\nexport default App;\n","export const openCardHelper = (cardItems, idx) => {\r\n  let copyItems = [...cardItems];\r\n  copyItems[idx] = 1;\r\n  return [...copyItems];\r\n};\r\n\r\nexport const openAllCardsHelper = (cardItems) => {\r\n  return [...cardItems.fill(1)];\r\n};\r\n\r\nexport const closeCardHelper = (cardItems, idx) => {\r\n  let copyItems = [...cardItems];\r\n  copyItems[idx] = 0;\r\n  return [...copyItems];\r\n};\r\n","import {\r\n  closeCardHelper,\r\n  openAllCardsHelper,\r\n  openCardHelper,\r\n} from \"./cards.utils\";\r\n\r\nconst { cardsActionTypes } = require(\"./cards.types\");\r\n\r\nconst INITIAL_STATE = {\r\n  arrOfCards: [],\r\n  cardsState: [],\r\n  match: \"\",\r\n};\r\n\r\nconst cardsReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case cardsActionTypes.SET_MATCH:\r\n      return {\r\n        ...state,\r\n        match: action.payload,\r\n      };\r\n    case cardsActionTypes.SET_CARDS_STATE:\r\n      return {\r\n        ...state,\r\n        cardsState: action.payload,\r\n      };\r\n    case cardsActionTypes.SET_ARR_OF_CARDS:\r\n      return {\r\n        ...state,\r\n        arrOfCards: action.payload,\r\n      };\r\n    case cardsActionTypes.OPEN_CARD:\r\n      return {\r\n        ...state,\r\n        cardsState: openCardHelper(state.cardsState, action.payload),\r\n      };\r\n    case cardsActionTypes.OPEN_ALL_CARDS:\r\n      return {\r\n        ...state,\r\n        cardsState: openAllCardsHelper(state.cardsState),\r\n      };\r\n    case cardsActionTypes.CLOSE_CARD:\r\n      return {\r\n        ...state,\r\n        cardsState: closeCardHelper(state.cardsState, action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cardsReducer;\r\n","const { userActionTypes } = require(\"./user.types\");\r\n\r\nconst INITIAL_STATE = {\r\n  currentUser: \"\",\r\n  currentDifficulty: \"easy\",\r\n  currentTurns: 0,\r\n};\r\n\r\nconst userReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case userActionTypes.SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        currentUser: action.payload,\r\n      };\r\n    case userActionTypes.SET_CURRENT_DIFFICULTY:\r\n      return {\r\n        ...state,\r\n        currentDifficulty: action.payload,\r\n      };\r\n    case userActionTypes.INCREASE_NUM_OF_TURNS:\r\n      return {\r\n        ...state,\r\n        currentTurns: state.currentTurns + action.payload,\r\n      };\r\n    case userActionTypes.RESET_NUM_OF_TURNS:\r\n      return {\r\n        ...state,\r\n        currentTurns: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cardsReducer from \"./cards/cards.reducer\";\r\nimport userReducer from \"./user/user.reducer\";\r\n\r\nexport default combineReducers({\r\n  cards: cardsReducer,\r\n  user: userReducer,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { logger } from \"redux-logger\";\r\n\r\nimport rootReducer from \"./root-reducer\";\r\n\r\nconst middlewares = [logger];\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(...middlewares));\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./App\";\nimport store from \"./redux/store\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const cardsActionTypes = {\r\n  OPEN_CARD: \"OPEN_CARD\",\r\n  OPEN_ALL_CARDS: \"OPEN_ALL_CARDS\",\r\n  CLOSE_CARD: \"CLOSE_CARD\",\r\n  SET_ARR_OF_CARDS: \"SET_ARR_OF_CARDS\",\r\n  SET_CARDS_STATE: \"SET_CARDS_STATE\",\r\n  SET_MATCH: \"SET_MATCH\",\r\n};\r\n","export const userActionTypes = {\r\n  SET_CURRENT_USER: \"SET_CURRENT_USER\",\r\n  SET_CURRENT_DIFFICULTY: \"SET_CURRENT_DIFFICULTY\",\r\n  INCREASE_NUM_OF_TURNS: \"INCREASE_NUM_OF_TURNS\",\r\n  RESET_NUM_OF_TURNS: \"RESET_NUM_OF_TURNS\",\r\n};\r\n"],"sourceRoot":""}